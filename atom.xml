<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Akihi&#39;s Shell</title>
  
  
  <link href="https://akihi.ink/atom.xml" rel="self"/>
  
  <link href="https://akihi.ink/"/>
  <updated>2021-06-27T20:02:46.324Z</updated>
  <id>https://akihi.ink/</id>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>红米AX6刷入OpenWrt固件</title>
    <link href="https://akihi.ink/2021/06/27/flash-OpenWrt-firmware-for-Redmi-AX6/"/>
    <id>https://akihi.ink/2021/06/27/flash-OpenWrt-firmware-for-Redmi-AX6/</id>
    <published>2021-06-27T15:22:49.000Z</published>
    <updated>2021-06-27T20:02:46.324Z</updated>
    
    <content type="html"><![CDATA[<p>最近lean的lede仓库添加了对AX6的支持</p><p>终于能用上OpenWrt了（虽然目前还没有breed/pb-boot）</p><a id="more"></a><h4 id="事前准备"><a href="#事前准备" class="headerlink" title="事前准备"></a>事前准备</h4><ul><li><p>一台电脑</p></li><li><p>一个OpenWrt系统的路由器（我使用的是小米路由器3G，以下简称R3G）</p></li></ul><h4 id="配置OpenWrt服务器"><a href="#配置OpenWrt服务器" class="headerlink" title="配置OpenWrt服务器"></a>配置OpenWrt服务器</h4><p>电脑连接R3G（无线或有线均可）</p><p>SSH连接R3G后执行如下命令创建文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/lua/luci/controller/admin/xqsystem.lua</span><br></pre></td></tr></table></figure><p>输入以下内容并保存</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">module(<span class="string">"luci.controller.admin.xqsystem"</span>, <span class="built_in">package</span>.<span class="built_in">seeall</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">index</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">local</span> page   = node(<span class="string">"api"</span>)</span><br><span class="line">    page.target  = firstchild()</span><br><span class="line">    page.title   = (<span class="string">""</span>)</span><br><span class="line">    page.order   = <span class="number">100</span></span><br><span class="line">    page.index = <span class="literal">true</span></span><br><span class="line">    page   = node(<span class="string">"api"</span>,<span class="string">"xqsystem"</span>)</span><br><span class="line">    page.target  = firstchild()</span><br><span class="line">    page.title   = (<span class="string">""</span>)</span><br><span class="line">    page.order   = <span class="number">100</span></span><br><span class="line">    page.index = <span class="literal">true</span></span><br><span class="line">    entry(&#123;<span class="string">"api"</span>, <span class="string">"xqsystem"</span>, <span class="string">"token"</span>&#125;, call(<span class="string">"getToken"</span>), (<span class="string">""</span>), <span class="number">103</span>, <span class="number">0x08</span>)</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">local</span> LuciHttp = <span class="built_in">require</span>(<span class="string">"luci.http"</span>)</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getToken</span><span class="params">()</span></span></span><br><span class="line">    <span class="keyword">local</span> result = &#123;&#125;</span><br><span class="line">    result[<span class="string">"code"</span>] = <span class="number">0</span></span><br><span class="line">    result[<span class="string">"token"</span>] = <span class="string">"; nvram set ssh_en=1; nvram commit; echo -e 'admin\nadmin' | passwd root; sed -i 's/channel=.*/channel=\"debug\"/g' /etc/init.d/dropbear; /etc/init.d/dropbear start;"</span></span><br><span class="line">    LuciHttp.write_json(result)</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p>之后将R3G lan接口的IPv4地址修改为<code>169.254.31.1</code></p><img src ="https://z3.ax1x.com/2021/06/28/RtCrUx.png" /><p>并取消勾选<code>动态DHCP</code></p><img src ="https://z3.ax1x.com/2021/06/28/RtCWKH.png" /><p>应用更改后手动设置电脑的静态ip地址</p><img src ="https://z3.ax1x.com/2021/06/28/Rtikff.png" /><p>重新连接后执行以下命令（也可以用浏览器访问curl后的网址）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://169.254.31.1/cgi-bin/luci/api/xqsystem/token</span><br></pre></td></tr></table></figure><p>返回类似以下结果即服务器正常运行</p><img src="https://z3.ax1x.com/2021/06/28/RtVkQK.png" /><h4 id="启用SSH"><a href="#启用SSH" class="headerlink" title="启用SSH"></a>启用SSH</h4><p>电脑使用网线连接AX6</p><p>登录管理界面如下图获取stok备用</p><img src="https://z3.ax1x.com/2021/06/28/RtVBlV.png" /><p>再依次执行以下命令（可使用浏览器访问curl后的网址代替命令）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">curl http://192.168.31.1/cgi-bin/luci/;stok=STOK/api/misystem/extendwifi_connect?ssid=SSID&amp;password=PWD</span><br><span class="line"></span><br><span class="line">curl http://192.168.31.1/cgi-bin/luci/;stok=STOK/api/xqsystem/oneclick_get_remote_token?username=xxx&amp;password=xxx&amp;nonce=xxx</span><br></pre></td></tr></table></figure><p>第一条命令中 </p><p>STOK为AX6的stok值</p><p>SSID为R3G的WIFI名称</p><p>PWD为R3G的WIFI密码（未设置密码可缺省）</p><p>第二条命令仅需替换STOK</p><img src="https://z3.ax1x.com/2021/06/28/RtVymF.png" /><p>返回code为0即执行成功</p><p>两条命令均执行成功后可以admin为密码ssh连接AX6</p><img src="https://z3.ax1x.com/2021/06/28/RtVWf1.png" /><h4 id="刷入QSDK"><a href="#刷入QSDK" class="headerlink" title="刷入QSDK"></a>刷入QSDK</h4><p>备份（ssh连接AX6后执行，非必需）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd if=/dev/mtd9 of=/tmp/mtd9</span><br></pre></td></tr></table></figure><p>保存至电脑</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r root@192.168.31.1:/tmp/mtd9 ./</span><br></pre></td></tr></table></figure><p>设置env</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">nvram set flag_last_success=0</span><br><span class="line">nvram set flag_boot_rootfs=0</span><br><span class="line">nvram set flag_boot_success=1</span><br><span class="line">nvram set flag_try_sys1_failed=0</span><br><span class="line">nvram set flag_try_sys2_failed=0</span><br><span class="line">nvram set boot_wait=on</span><br><span class="line">nvram set uart_en=1</span><br><span class="line">nvram set telnet_en=1</span><br><span class="line">nvram set ssh_en=1</span><br><span class="line">nvram commit</span><br></pre></td></tr></table></figure><p>上传qsdk固件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp xiaomimtd12.bin root@192.168.31.1:/tmp</span><br></pre></td></tr></table></figure><img src="https://z3.ax1x.com/2021/06/28/RtZNnO.png" /><p>写入并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mtd write /tmp/xiaomimtd12.bin rootfs</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><img src="https://z3.ax1x.com/2021/06/28/RtZaHe.png" /><p>重启后qsdk后台地址为<code>192.168.1.1</code> 无密码</p><img src="https://z3.ax1x.com/2021/06/28/RtZwAH.png" /><p>上传a6minbib.bin</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp a6minbib.bin root@192.168.1.1:/tmp</span><br></pre></td></tr></table></figure><p>重新分区并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">. /lib/upgrade/platform.sh</span><br><span class="line"></span><br><span class="line">switch_layout boot; do_flash_failsafe_partition a6minbib "0:MIBIB"</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><img src="https://z3.ax1x.com/2021/06/28/RtZr9I.png" /><p>上传OpenWrt</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp openwrt-ipq807x-generic-redmi_ax6-squashfs-nand-factory.ubi root@192.168.1.1:/tmp</span><br></pre></td></tr></table></figure><img src="https://z3.ax1x.com/2021/06/28/RtZygP.png" /><p>刷入OpenWrt并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ubiformat /dev/mtd13 -y -f /tmp/openwrt-ipq807x-generic-redmi_ax6-squashfs-nand-factory.ubi</span><br><span class="line"></span><br><span class="line">fw_setenv flag_last_success 1</span><br><span class="line"></span><br><span class="line">fw_setenv flag_boot_rootfs 1</span><br><span class="line"></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><img src="https://z3.ax1x.com/2021/06/28/RtZgu8.png" /><p>重新启动后就是OpenWrt了（后台192.168.1.1 密码password）</p><img src="https://z3.ax1x.com/2021/06/28/RtZ2DS.png"  width="85%" height="85%"  /><h4 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h4><p>刷入qsdk前 后台/ssh ip为192.168.31.1</p><p>启用ssh后密码为admin</p><p>刷入qsdk后 后台/ssh ip为192.168.1.1 无密码</p><p>scp上传/下载文件直接在本地执行</p><p>操作路由器的命令在ssh连接路由器后执行</p><h4 id="相关"><a href="#相关" class="headerlink" title="相关"></a>相关</h4><ul><li><p><a href="https://www.right.com.cn/forum/thread-4060726-1-1.html" target="_blank" rel="noopener">红米AX6 SSH解锁和挂载overlay方法</a></p></li><li><p><a href="https://www.right.com.cn/forum/thread-4111331-1-1.html" target="_blank" rel="noopener">小米红米路由器AX6刷第三方openwrt固件</a></p></li><li><p><a href="https://github.com/inkubur/OpenWrt-builder/actions/workflows/AX6.yml" target="_blank" rel="noopener">Build AX6</a> </p></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;最近lean的lede仓库添加了对AX6的支持&lt;/p&gt;
&lt;p&gt;终于能用上OpenWrt了（虽然目前还没有breed/pb-boot）&lt;/p&gt;</summary>
    
    
    
    
    <category term="路由器" scheme="https://akihi.ink/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    <category term="OpenWrt" scheme="https://akihi.ink/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>博客启用HTTP严格传输安全(HSTS)</title>
    <link href="https://akihi.ink/2021/04/17/enable-HSTS-for-my-blog/"/>
    <id>https://akihi.ink/2021/04/17/enable-HSTS-for-my-blog/</id>
    <published>2021-04-17T05:42:09.000Z</published>
    <updated>2021-04-28T10:31:35.548Z</updated>
    
    <content type="html"><![CDATA[<p>前一阵子就打算给博客启用HSTS</p><p><a href="https://github.com/isaacs/github/issues/1249" target="_blank" rel="noopener">但Github Pages并不支持这个</a></p><p>今天查询一番后</p><p>发现可以通过套CloudFlare启用HSTS</p><p>简单记录一下操作过程</p><p><del>PS: 在好久前我就使用CF解析博客了 不过当时并未留意到它自带HSTS</del></p><p><del>如果你的域名服务商不是CF 需要将名称服务器(NameServer)切换至CF才能进行后续的操作</del></p><p>在博客对应域名的 <code>SSL/TLS &gt; 边缘证书</code>中找到<code>HTTP严格传输安全(HSTS)</code></p><img src ="https://z3.ax1x.com/2021/04/17/c52tij.png"  /><img src ="https://z3.ax1x.com/2021/04/17/c52cFJ.png" /><p>点击启用并按如下设置</p><p><img src="https://z3.ax1x.com/2021/04/17/c52WS1.png" alt=""></p><p>注意其中<code>最长期限标头(max-age)</code>需要设置为12个月</p><p>之后访问<a href="https://hstspreload.org" target="_blank" rel="noopener">hstspreload.org</a></p><p>查询自己的域名</p><img src ="https://z3.ax1x.com/2021/04/17/c5Rzg1.png" /><p>submit之后就可以坐等域名进入preload list咯</p><img src ="https://z3.ax1x.com/2021/04/18/c54VC4.jpg" width="35%" height="35%" /><hr><p>04-20</p><p>域名已进入preload list</p><img src ="https://z3.ax1x.com/2021/04/20/cHatjU.png" /><hr><p>04-21</p><p>域名进入google-chrome-stable</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;前一阵子就打算给博客启用HSTS&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/isaacs/github/issues/1249&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;但Github Pages并不支持这个&lt;/a&gt;&lt;/p&gt;</summary>
      
    
    
    
    
    <category term="博客" scheme="https://akihi.ink/tags/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>使用smstools3转发短信至TG/QQ</title>
    <link href="https://akihi.ink/2021/03/16/SMS-forwarding/"/>
    <id>https://akihi.ink/2021/03/16/SMS-forwarding/</id>
    <published>2021-03-16T13:51:02.000Z</published>
    <updated>2021-03-16T14:30:29.367Z</updated>
    
    <content type="html"><![CDATA[<h4 id="需要"><a href="#需要" class="headerlink" title="需要"></a>需要</h4><ul><li><p>运行OpenWrt的设备（小米路由器3G）</p></li><li><p>可以收短信的3G/4G上网卡（ZTE MF637u）</p></li></ul><p><del>将上网卡插入路由器（这个需要我说吗）</del></p><p>ssh登录路由后</p><p>安装依赖</p><p><code>opkg update &amp;&amp; opkg install git-http bash curl iconv smstools3 kmod-usb-serial kmod-usb-serial-wwan kmod-usb-serial-option usb-modeswitch</code></p><p>克隆仓库</p><p><code>git clone https://hub.fastgit.org/KomoreKalu/Messenger.git &amp;&amp; cd Messenger</code></p><p><code>cp smsd.conf /etc/smsd.conf</code></p><p>按需补充<code>forward.sh</code>内的ID和TOKEN信息并取消toQmsg或toTG的注释</p><p><code>smsd.conf</code> 中的 <code>/dev/ttyUSB1</code>可能需要修改</p><p>再执行 <code>service smstools3 restart</code> 即可</p><p>转发短信效果图</p><img src="https://s3.ax1x.com/2021/03/16/6ycxgg.jpg" style="zoom:60%" /><img src="https://s3.ax1x.com/2021/03/16/6ygrPf.jpg" style="zoom:60%" /><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://lte.pw/lede-openwrt-smstools3-push-sms-to-telegram.html" target="_blank" rel="noopener">Openwrt/LEDE 利用 3G 上网卡推送短信到 Telegram/微信</a></p><p><a href="https://qmsg.zendee.cn/api.html" target="_blank" rel="noopener">Qmsg酱</a></p><p><a href="https://t.me/BotFather" target="_blank" rel="noopener">BotFather</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;需要&quot;&gt;&lt;a href=&quot;#需要&quot; class=&quot;headerlink&quot; title=&quot;需要&quot;&gt;&lt;/a&gt;需要&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;运行OpenWrt的设备（小米路由器3G）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;可以收短信的3G/4G上网卡（ZTE MF6</summary>
      
    
    
    
    
    <category term="OpenWrt" scheme="https://akihi.ink/tags/OpenWrt/"/>
    
    <category term="短信" scheme="https://akihi.ink/tags/%E7%9F%AD%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>Padavan+OpenWrt旁路由启用ipv6</title>
    <link href="https://akihi.ink/2021/01/13/enable-ipv6-for-Padavan-and-OpenWrt/"/>
    <id>https://akihi.ink/2021/01/13/enable-ipv6-for-Padavan-and-OpenWrt/</id>
    <published>2021-01-13T13:42:55.000Z</published>
    <updated>2021-04-17T17:12:29.365Z</updated>
    
    <content type="html"><![CDATA[<p>家里的辣鸡广电宽带终于到期了</p><p>换了电信后顺便启用了ipv6</p><a id="more"></a><blockquote><p>主路由 红米ac2100 (Padavan)</p><p>旁路由 贝壳云 (OpenWrt)</p></blockquote><p>Padavan:</p><p><img src="https://z3.ax1x.com/2021/02/06/yJ6d8P.png" alt=""></p><p>在 <code>外网 WAN - IPv6 协议</code> 中将<code>IPv6 连接类型</code> 设置为<code>Native DHCPv6</code></p><p>其它选项按下图设置</p><p><img src="https://z3.ax1x.com/2021/04/18/c5IVXR.png" alt=""></p><p>OpenWrt:</p><p><img src="https://z3.ax1x.com/2021/02/06/yJ6sbQ.png" alt=""></p><p>在<code>网络 - 接口</code>里创建新接口</p><p>名称随意</p><p>新接口的协议选择 <code>DHCPv6客户端</code></p><p>自定义接口 <code>@lan</code></p><p>提交之后分配防火墙区域为lan </p><p>保存&amp;应用之后再连接接口</p><p>也可以使用如下命令创建/连接接口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">uci <span class="built_in">set</span> network.lan6=interface</span><br><span class="line">uci <span class="built_in">set</span> network.lan6.ifname=@lan</span><br><span class="line">uci <span class="built_in">set</span> network.lan6.proto=dhcpv6</span><br><span class="line">uci <span class="built_in">set</span> network.lan6.reqaddress=try</span><br><span class="line">uci <span class="built_in">set</span> network.lan6.reqprefix=auto</span><br><span class="line">uci <span class="built_in">set</span> firewall.cfg02dc81.network=<span class="string">'lan lan6'</span></span><br><span class="line">uci commit</span><br><span class="line">ifup lan6</span><br></pre></td></tr></table></figure><p>弄好之后局域网中的设备就能使用ipv6了</p><p><img src="https://z3.ax1x.com/2021/01/24/sbaQJI.png" alt=""></p><p><img src="https://z3.ax1x.com/2021/02/06/yJ6RCq.png" alt=""></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;家里的辣鸡广电宽带终于到期了&lt;/p&gt;
&lt;p&gt;换了电信后顺便启用了ipv6&lt;/p&gt;</summary>
    
    
    
    
    <category term="路由器" scheme="https://akihi.ink/tags/%E8%B7%AF%E7%94%B1%E5%99%A8/"/>
    
    <category term="OpenWrt" scheme="https://akihi.ink/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>在Debian Bullseye上使用Fcitx5-rime</title>
    <link href="https://akihi.ink/2020/12/12/use-the-fcitx5-rime-on-Debian-Bullseye/"/>
    <id>https://akihi.ink/2020/12/12/use-the-fcitx5-rime-on-Debian-Bullseye/</id>
    <published>2020-12-12T12:47:32.000Z</published>
    <updated>2021-04-17T16:59:06.595Z</updated>
    
    <content type="html"><![CDATA[<p>长话短说</p><p>安装 <code>sudo apt install fcitx5 fcitx5-rime fcitx5-material-color</code></p><p>配置 <code>fcitx5-config-qt</code></p><p>添加<code>中州韻</code></p><p><img src="https://i.loli.net/2020/12/12/ZIb1jSdmvMU6EC8.png" alt=""></p><p>按需修改<code>附加组件 &gt; 经典用户界面</code></p><p><img src="https://i.loli.net/2020/12/12/nAsB5GhNRE2mICa.png" alt=""></p><p>启用单行模式</p><p><code>vi ~/.config/fcitx5/conf/rime.conf</code></p><p>修改或添加</p><p><code>PreeditInApplication=True</code></p><p>在<code>gnome-tweaks &gt; 开机启动程序</code>中添加Fcitx5</p><p><img src="https://i.loli.net/2020/12/14/8SoIMjluR64avBp.png" alt=""></p><p><img src="https://i.loli.net/2020/12/12/Zy5Rg9UAXaSwPH8.png" alt=""></p><p>相关</p><ul><li><a href="https://github.com/fcitx/fcitx5" target="_blank" rel="noopener">fcitx5</a></li><li><a href="https://rime.im/" target="_blank" rel="noopener">RIME | 中州韻輸入法引擎</a></li><li><a href="https://github.com/hosxy/Fcitx5-Material-Color" target="_blank" rel="noopener">Fcitx5-Material-Color</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;长话短说&lt;/p&gt;
&lt;p&gt;安装 &lt;code&gt;sudo apt install fcitx5 fcitx5-rime fcitx5-material-color&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配置 &lt;code&gt;fcitx5-config-qt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;添加&lt;c</summary>
      
    
    
    
    
    <category term="Linux" scheme="https://akihi.ink/tags/Linux/"/>
    
    <category term="Fcitx5" scheme="https://akihi.ink/tags/Fcitx5/"/>
    
  </entry>
  
</feed>
